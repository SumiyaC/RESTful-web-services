openapi: 3.0.3
info:
  title: Course Enrollment API
  version: 1.0.0
  description: API for managing student's course enrollment information

tags:
  - name: Courses
    description: Everything about your Courses
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /courses:
    get:
      summary: Get a list of courses
      tags:
        - Courses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              example:
                - courseCode: MATH101
                  courseName: Mathematics 101
                  teacherName: Jane Doe
                  timing:
                    startingDate: '2023-10-01'
                    endingDate: '2023-12-31'
                    duration: 3 months
                  courseObjectives: Fundamentals of Mathematics
                  credits: 3
                  implementationMethod: In-person or Online
                - courseCode: PHYS101
                  courseName: Physics 101
                  teacherName: John Smith
                  timing:
                    startingDate: '2023-09-01'
                    endingDate: '2023-12-15'
                    duration: 3.5 months
                  courseObjectives: Intro to Physics
                  credits: 3
                  implementationMethod: In-person

    post:
      summary: Create a new course
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              example:
                message: Course created successfully
                courseCode: IT00AC90-3006
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                message: Invalid input

  '/courses/{courseCode}':
    put:
      summary: Update a course by Course Code
      tags:
        - Courses
      parameters:
        - name: courseCode
          example: IT00AC90-3006
          in: path
          required: true
          description: Code of the course to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              example:
                message: Course updated successfully
                courseCode: IT00AC90-3006
        '400':
          description: Invalid input data
          content:
            application/json:
              example:
                message: Invalid input data
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found
        '405':
          description: Validation exception
          content:
            application/json:
              example:
                message: Validation exception

    get:
      summary: Get a course by Course Code
      tags:
        - Courses
      parameters:
        - name: courseCode
          example: IT00AC90-3006
          in: path
          required: true
          description: Code of the course to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Course details
          content:
            application/json:
              example:
                courseCode: MATH101
                courseName: Mathematics 101
                teacherName: Jane Doe
                timing:
                  startingDate: '2023-10-01'
                  endingDate: '2023-12-31'
                  duration: 3 months
                courseObjectives: Fundamentals of Mathematics
                credits: 3
                implementationMethod: In-person or Online
        '404':
          description: Course not found
        '400':
          description: Bad Request

    delete:
      summary: Delete a course by Course Code
      tags:
        - Courses
      parameters:
        - name: courseCode
          in: path
          required: true
          description: Code of the course to delete
          schema:
            type: string
      responses:
        '204':
          description: Course deleted successfully
        '404':
          description: Course not found
        '403':
          description: Forbidden

  /coursesByName:
    get:
      summary: Search for a course by course name
      tags:
        - Courses
      parameters:
        - name: name
          in: query
          required: true
          description: Course name to search for
          schema:
            type: string
      responses:
        '200':
          description: Course matching the provided name
          content:
            application/json:
              example:
                courseCode: MATH101
                courseName: Mathematics 101
                teacherName: Jane Doe
                timing:
                  startingDate: '2023-10-01'
                  endingDate: '2023-12-31'
                  duration: 3 months
                courseObjectives: Fundamentals of Mathematics
                credits: 3
                implementationMethod: In-person or Online
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found


  /coursesByTeacher:
    get:
      summary: Search for courses by teacher name
      tags:
        - Courses
      parameters:
        - name: teacherName
          in: query
          required: true
          description: Teacher name to search for
          schema:
            type: string
      responses:
        '200':
          description: List of courses taught by the provided teacher
          content:
            application/json:
              example:
                - courseCode: MATH101
                  courseName: Mathematics 101
                  teacherName: Jane Doe
                  timing:
                    startingDate: '2023-10-01'
                    endingDate: '2023-12-31'
                    duration: 3 months
                    courseObjectives: Fundamentals of Mathematics
                    credits: 3
                    implementationMethod: In-person or Online
                - courseCode: PHYS101
                  courseName: Physics 101
                  teacherName: John Smith
                  timing:
                    startingDate: '2023-09-01'
                    endingDate: '2023-12-15'
                    duration: 3.5 months
                    courseObjectives: Intro to Physics
                    credits: 3
                    implementationMethod: In-person
        '400':
          description: Teacher not found
        '404':
          description: Course not found

components:
  schemas:
    CourseRequest:
      type: object
      properties:
        courseName:
          type: string
          example: Rest API
        teacherName:
          type: string
          example: Simo
        timing:
          type: object
          properties:
            startingDate:
              type: string
              format: date
              example: 2023-08-28
            endingDate:
              type: string
              format: date
              example: 2023-12-28
            duration:
              type: string
              example: 3 months
        courseCode:
          type: string
          example: IT00AC90-3006
        courseObjectives:
          type: string
          example: Learn about Rest architecture
        credits:
          type: integer
          example: 5
        implementationMethod:
          type: string
          enum: 
            - Online
            - In-person
          example: In-person
